{
	"nodes":[
		{"id":"ae03c29d31b522d7","x":-24,"y":-173,"width":250,"height":60,"color":"5","type":"text","text":"CHAPTER 3 NOSQL AND DATABASES"},
		{"id":"8c27c9b010d0e6cd","x":458,"y":-93,"width":250,"height":60,"color":"6","type":"text","text":"CENTRAL NODE"},
		{"id":"d2d952e7015f8a0b","x":-720,"y":-203,"width":400,"height":703,"color":"5","type":"text","text":"# Document based database #EXP \n- These databases are non relational dbs instead of storing the data in rows and columns, it uses the documents to store the data in the database\n- A document database stores data in JSON BSON or XML documents\n- Documents can be stored and retrieved in a form that is much close to the data objects used in applications which means less translation is required to use data in the applications\n- Not all documents are in any collection as they require similar schema.\n---\n# Key features of database #EXP \n- Flexible schema: Documents in the dbs has a flexible schema, it means the documents in the database need not be the same schema.\n- Faster creation and maintenance: The creation of documents is easy and minimal maintance is required once it is created.\n- No foreign keys: THere is no dynamic relationship between two documents so documents can be independent of one another\n- Open formats: TO build a document we use XML, JSON and others."},
		{"id":"defa614c4f75fb67","x":-240,"y":240,"width":560,"height":760,"color":"5","type":"text","text":"# Overview of NOSQL #EXP \n- NOSQL is a type of database management system that is designed to handle and store large volumes of unstrucutred and semi strucutre data\n- unlike traditional RDBMS that use tables and pre defined schemas, NOSQL uses flexible data models that can adapt to changes in data structures and are capable of scaling horizontally to handle growing amounts of data\n- NOSQL DBs is useful in applications where there is a large amount of data to be handled\n- NOSQL DBs do not provide the same level of data consistency and transactional guarantees as traditional RDBMS, so it is not suitable for all applications\n---\n# Features of NOSQL #EXP \n- Schema flexibility: NOSQL databases often allow for dynamic schemas, meaning the structure of the data can change without needing to alter a predefined schema.\n- Scalability: Many NOSQL databases are designed to scale out hroizontally by distributing data across multiple servers. This allows them to handle large volumes of data and high velocity transactions more efficiently.\n- High Performance: NOSQL databases are optimized for performance with various data models and indexing techniques. they can handle high speed read and writes, making them suitable for real time applications\n- High Availability and fault tolerance: NOSQL databases are often designed with builtin replication and distribution features to ensure high availability and fault tolerance, this means they can continue to operate even if some parts of the system fail.\n- Eventual Consistency: unlike RDBMS that often use strong consistency models, many NOSQL dbs use eventual consistency.\n- Easy integration with big data technologies: NOSQL dbs are frequently used alongside big data technologies such as hadoop and spark. providing a robust solution for handling large scale data processing and analytics\n- Flexible QUery Languages: NOSQL dbs often come with their own query tailored to their specific data models, offering different querying capabilities compared to SQL\n---\n# Types of NOSQL dbs #EXP \n- Document based: These dbs store data as semi structured documents such as JSON or XML and can be queried using document oriented query languages eg: MongoDB, cloudant\n- Key valued store: These dbs store data as key value pairs and are optimized for simple and fast read write operations eg: Memcached, Redis\n- Column family stores: These dbs store data as column families which are sets of columns that are treated as single entity. they are optimized for fast and efficient querying of large amounts of data. eg:Hbase, Big table\n- Graph dbs: these databases store data as nodes and edges, and are designed to handle complex relationships between data. eg:  amazon neptune, neo4j\n---\n# Benefits of NOSQL dbs #EXP \n- Flexibility: NOSQL databases are designed to handle unstructured or semi structured data which means that they can accommodate dynamic changes to the data model.\n- High Availability: The auto replication feature in NOSQL dbs make them highly available because in case of any failure data replicates itself to previous consistent state\n- Scalability: NOSQL databases are highly scalable which means that they can handle large amounts of data and traffic with eaase. THis makes them a good fit for applications that need to handle large amounts of data or traffic\n- Performance: NOSQL databases are designed to handle large amounts of data and traffic which means that they can offer improved performance compared to traditional RBDMS\n- Cost effectiveness: NOSQL dbs are often more cost effective than tradtional RDBMS as they are typically less complex and do not require expensive hardware or software\n- Agikity: IDEAL for agile development."},
		{"id":"d4a21fed8bc6dd22","x":-399,"y":-1000,"width":559,"height":545,"color":"5","type":"text","text":"# Key value stores #EXP \n- a key value store is a non relational database the simplest form of a nosql database is a key value store every data element in the database is stored in key value pairs. the data can be retrieved by using a unique key allotted to each element in the database the value can be simple datatypes or complex obejcts\n- A key value store is like a reltational database with only two columns which is the key and the value\n## Key features of key value store:\n 1. Simplicity\n 2. Scalability\n 3. Speed\n ---\n# Column Oriented databases:\n- A column oriented database is a non relational database that stores the data in columns instead of rows, that means when we want to run analytics on a small number of columns you can read those columns directly without consuming memory with unwanted data\n- Columnar databases are designed to read data more efficiently and retrieve the data with greater speed. A columnar database is used to store a large amount of data\n## Key features of columnar oriented databases:\n1. Scalability \n2. Compression\n3. Very Responsive\n--- \n# Graph Based databases:\n- Graph based databases focus on the relationship between elements. it stores the data in the form of nodes in the database the connections between the nodes are called links\n## Key features of graph based databases:\n1. It is easy to identify the relationship between the data by using the links\n2. The queryâ€™s output is real time results\n3. the speed depends upon the number of relationships \n4. updating data is easy, as adding a new node or edge is a straightforward task that does not require significant schema changes"},
		{"id":"d7125c592b9a4b6c","x":-1880,"y":340,"width":674,"height":560,"color":"5","type":"text","text":"# Comparison between SQL and NOSQL #DIFF \n\n| Points:                           | SQL                            | NOSQL                                              |\n| --------------------------------- | ------------------------------ | -------------------------------------------------- |\n| USAGE                             | Used in RDBMS                  | Used in non relational or distributed dbs          |\n| Schema definition                 | Fixed or static schema         | Dynamic schema                                     |\n| Suitability for hierarchical data | Not suitable                   | Suitable                                           |\n| Suitability for queries           | Best suited for coplex queries | Not suited for complex queries but simple queiries |\n| Scalability                       | Vertically scalable            | Horizontally scalable                              |\n| Consistency protocal              | Follows ACID                   | Follows CAP                                        |\n| Examples                          | MYSQL, ORCALE DB               | MongoDB, Cassandra                                 |\n"},
		{"id":"2201cbb558fe1bcc","x":-1713,"y":-271,"width":553,"height":391,"color":"5","type":"text","text":"# MongoDB #EXP \n- Built on a scale out architecture that has become popular with devs for devloping scable applications with evolving data schemas\n- Document based database, it makes it easy for developers to store strucutred or unstructured data\n- It uses JSON or BSON file formats\n- MongoDB is an open source NOSQL dbms program\n- instead of using tables and rows as in RDBMS, MongoDB architecture is made up of collections and documents.\n--- \n"},
		{"id":"77fefe28bcca9556","x":-2600,"y":-203,"width":640,"height":483,"color":"5","type":"file","file":"Excalidraw/Drawing 2024-10-14 07.46.03.excalidraw.md"}
	],
	"edges":[
		{"id":"9a6e0cdf02c4fafe","fromNode":"defa614c4f75fb67","fromSide":"top","toNode":"ae03c29d31b522d7","toSide":"bottom"},
		{"id":"428c698df80ab5df","fromNode":"ae03c29d31b522d7","fromSide":"right","toNode":"8c27c9b010d0e6cd","toSide":"left"},
		{"id":"28873fd53a9eb22e","fromNode":"d2d952e7015f8a0b","fromSide":"right","toNode":"ae03c29d31b522d7","toSide":"left"},
		{"id":"0132a628ec3d874e","fromNode":"d4a21fed8bc6dd22","fromSide":"bottom","toNode":"ae03c29d31b522d7","toSide":"top"},
		{"id":"8a4b4ddb2ef52ebf","fromNode":"d7125c592b9a4b6c","fromSide":"right","toNode":"d2d952e7015f8a0b","toSide":"left"},
		{"id":"d163845d134cc763","fromNode":"d7125c592b9a4b6c","fromSide":"right","toNode":"defa614c4f75fb67","toSide":"left"},
		{"id":"6d893741f43547f8","fromNode":"77fefe28bcca9556","fromSide":"right","toNode":"2201cbb558fe1bcc","toSide":"left"}
	]
}